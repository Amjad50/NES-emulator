pub struct Color {
    pub r: u8,
    pub g: u8,
    pub b: u8,
}

// for easier building
macro_rules! color {
    ($r:expr, $g:expr, $b:expr) => {
        Color {
            r: $r,
            g: $g,
            b: $b,
        }
    };
}

// TODO: not sure which is better, static or const
//  look more into it
// 
// FIXME: add assert or some constrains to only index into the range 0..0x3F
// 
// got these color data from
// http://www.thealmightyguru.com/Games/Hacking/Wiki/index.php?title=NES_Palette
pub static COLORS: [Color; 0x40] = [
    color!(0x7C, 0x7C, 0x7C),
    color!(0x00, 0x00, 0xFC),
    color!(0x00, 0x00, 0xBC),
    color!(0x44, 0x28, 0xBC),
    color!(0x94, 0x00, 0x84),
    color!(0xA8, 0x00, 0x20),
    color!(0xA8, 0x10, 0x00),
    color!(0x88, 0x14, 0x00),
    color!(0x50, 0x30, 0x00),
    color!(0x00, 0x78, 0x00),
    color!(0x00, 0x68, 0x00),
    color!(0x00, 0x58, 0x00),
    color!(0x00, 0x40, 0x58),
    color!(0x00, 0x00, 0x00),
    color!(0x00, 0x00, 0x00),
    color!(0x00, 0x00, 0x00),
    color!(0xBC, 0xBC, 0xBC),
    color!(0x00, 0x78, 0xF8),
    color!(0x00, 0x58, 0xF8),
    color!(0x68, 0x44, 0xFC),
    color!(0xD8, 0x00, 0xCC),
    color!(0xE4, 0x00, 0x58),
    color!(0xF8, 0x38, 0x00),
    color!(0xE4, 0x5C, 0x10),
    color!(0xAC, 0x7C, 0x00),
    color!(0x00, 0xB8, 0x00),
    color!(0x00, 0xA8, 0x00),
    color!(0x00, 0xA8, 0x44),
    color!(0x00, 0x88, 0x88),
    color!(0x00, 0x00, 0x00),
    color!(0x00, 0x00, 0x00),
    color!(0x00, 0x00, 0x00),
    color!(0xF8, 0xF8, 0xF8),
    color!(0x3C, 0xBC, 0xFC),
    color!(0x68, 0x88, 0xFC),
    color!(0x98, 0x78, 0xF8),
    color!(0xF8, 0x78, 0xF8),
    color!(0xF8, 0x58, 0x98),
    color!(0xF8, 0x78, 0x58),
    color!(0xFC, 0xA0, 0x44),
    color!(0xF8, 0xB8, 0x00),
    color!(0xB8, 0xF8, 0x18),
    color!(0x58, 0xD8, 0x54),
    color!(0x58, 0xF8, 0x98),
    color!(0x00, 0xE8, 0xD8),
    color!(0x78, 0x78, 0x78),
    color!(0x00, 0x00, 0x00),
    color!(0x00, 0x00, 0x00),
    color!(0xFC, 0xFC, 0xFC),
    color!(0xA4, 0xE4, 0xFC),
    color!(0xB8, 0xB8, 0xF8),
    color!(0xD8, 0xB8, 0xF8),
    color!(0xF8, 0xB8, 0xF8),
    color!(0xF8, 0xA4, 0xC0),
    color!(0xF0, 0xD0, 0xB0),
    color!(0xFC, 0xE0, 0xA8),
    color!(0xF8, 0xD8, 0x78),
    color!(0xD8, 0xF8, 0x78),
    color!(0xB8, 0xF8, 0xB8),
    color!(0xB8, 0xF8, 0xD8),
    color!(0x00, 0xFC, 0xFC),
    color!(0xF8, 0xD8, 0xF8),
    color!(0x00, 0x00, 0x00),
    color!(0x00, 0x00, 0x00),
];
